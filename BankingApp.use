-- This is a USE model of the Banking Application described in Using UML To Visualize Role-Based Access Control Constraints
-- By: Matthew Tuan and Robbie Dutton

model BankingApp

-- classes

class Session
operations
  AddActiveRole(r: Role)
  DropActiveRole(r: Role)
  CheckAccess(obj : Object, op : Operation)  : Boolean
  InvokeOperation(obj : Object, op : Operation)
end

class User
attributes
  UserId : String
operations
  CreateSession(s: Session)
  DeleteSession(s: Session)
  AssignRole(r: Role)
  DeassignRole(r: Role)
  AssignedRoles() : Set(Role)
  AuthorizedRoles() : Set(Role)
end

class Role 
attributes
  name : String
operations
  GrantPermission(p: Permission)
  RevokePermission(p: Permission)
  CheckAccess(obj : Object, op : Operation)  : Boolean
  AddAscendant(r: Role)
  DeleteAscendant(r: Role)
  AddDescendant(r: Role)
  DeleteDescendant(r: Role)
  AddSSDRole(r: Role)
  DeleteSSDRole(r: Role)
  AddDSDRole(r: Role)
  DeleteDSDRole(r: Role)
  AssignedUsers() : Set(User)
  AuthorizedUsers() : Set(User)
  Ascendants() : Set(Role)
  Descendants() : Set(Role)
  SSDRoles() : Set(Role)
  DSDRoles() : Set(Role)
end

class Permission
operations
  CheckAccess(obj : Object, op : Operation)  : Boolean
end

class Object
end

class Operation
end

-- associations

association UserSessions between
  User[1] role user
  Session[0..*] role a
end

association UserAssignment between
  User[0..*] role b
  Role[0..*] role c
end

association SessionRoles between
  Session[0..*] role d
  Role[0..*] role e
end

association PermAssignment between
  Role[0..*] role k
  Permission[0..*] role l
end

association PermObjects between
  Permission[0..*] role m
  Object[0..*] role f
end

association PermOperations between
  Permission[0..*] role n
  Operation[0..*] role p
end

association ExecuteOn between
  Object[0..*] role o
  Operation[0..*] role q
end

association SSD between
  Role[0..*] role g
  Role[0..*] role h
end

association DSD between
  Role[0..*] role r
  Role[0..*] role s
end

association RoleHierarchy between
  Role[0..*] role senior
  Role[0..*] role junior
end

-- constraints

constraints

-- class constraints



-- operation constraints

context User::CreateSession(s: Session)
  post createSessionPost: self.a -> includes(s)

context User::DeleteSession(s: Session)
  post deleteSessionPost: self.a -> excludes(s)

context Role::GrantPermission(p: Permission)
  pre grantPre: self.l -> excludes(p)
  post grantPost: self.l -> includes(p)

context User::AssignRole(r: Role)
  pre assignRolePre: self.c -> excludes(r)
  post assignRolePost: self.c -> includes(r)

context User::DeassignRole(r: Role)
  pre assignRolePre: self.c -> includes(r)
  post assignRolePost: self.c -> excludes(r)




